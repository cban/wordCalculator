To optimize the application's performance, both online and offline approaches were employed. Online, the file is  fetched from the internet and processed in memory, providing immediate access but this introduces  some memory overhead as the file is stored in memory. To address limitations with internet access, an offline approach was implemented using to read from a file stored locally. I used the BufferedReader  class to read from a file stored locally.  This class processes the file  line by line and thereby avoiding the need to load the entire file into memory which improves performance .
Further optimizations included me using the by lazy  delegation to initialize the splitWord() function only once when it was needed, this  improved performance by avoiding repeated computations when the function was called in other places. Furthermore I made sure that heavy computations were offloaded to background threads to keep the UI responsive.
For future improvements, processing files in chunks rather than loading them all at once could enhance performance and scalability even further.